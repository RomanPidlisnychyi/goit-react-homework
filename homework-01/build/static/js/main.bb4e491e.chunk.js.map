{"version":3,"sources":["components/Layout/Layout.js","components/Profile/styles.js","components/Profile/Profile.js","components/Statistics/styles.js","components/Statistics/Statistics.js","components/FriendList/styles.js","components/FriendListItem/styles.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/styles.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["Container","styled","section","Layout","children","Section","div","Description","Img","img","Name","p","Tag","StatsList","ul","StatsListItem","li","Label","span","Quantity","Profile","user","name","tag","location","avatar","stats","followers","views","likes","src","alt","Title","h2","List","ListItem","props","countItem","color","Percentage","Statistics","title","map","element","Math","random","toString","substring","toUpperCase","length","key","id","label","percentage","defaultProps","Item","Status","isOnline","FriendListItem","width","FriendList","friends","friend","Table","table","TableHead","thead","TableHeadRow","tr","TableRow","TransactionHistory","items","item","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.bb4e491e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nfunction Layout({ children }) {\n    return <Container>{children}</Container>;\n}\n\nLayout.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element),\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nconst Section = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #e7ecf2;\n    border: 1px solid black;\n    width: 430px;\n    height: 500px;\n    margin-bottom: 20px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: center;\n    width: 250px;\n    height: 330px;\n    background-color: #ffffff;\n`;\n\nconst Description = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst Img = styled.img`\n    width: 100px;\n    border-radius: 50%;\n    margin-bottom: 20px;\n`;\n\nconst Name = styled.p`\n    font-size: 18px;\n    font-weight: 700;\n`;\n\nconst Tag = styled.p`\n    font-size: 14px;\n    color: #768696;\n    margin-top: 10px;\n`;\n\nconst StatsList = styled.ul`\n    display: flex;\n    list-style: none;\n    height: 75px;\n    border: 1px solid #bfcdde;\n    width: 100%;\n    margin-top: 20px;\n`;\n\nconst StatsListItem = styled.li`\n    display: flex;\n    width: 33.3%;\n    flex-direction: column;\n    border-right: 1px solid #bfcdde;\n    justify-content: center;\n    align-items: center;\n    &:last-child {\n        border-right: none;\n    }\n`;\n\nconst Label = styled.span`\n    font-size: 14px;\n    color: #768696;\n    margin-bottom: 5px;\n`;\n\nconst Quantity = styled.span`\n    font-weight: 700;\n`;\n\nexport {\n    Section,\n    Container,\n    Description,\n    Img,\n    Name,\n    Tag,\n    StatsList,\n    StatsListItem,\n    Label,\n    Quantity,\n};\n","import React from 'react';\nimport {\n    Section,\n    Container,\n    Description,\n    Img,\n    Name,\n    Tag,\n    StatsList,\n    StatsListItem,\n    Label,\n    Quantity,\n} from './styles.js';\nimport PropTypes from 'prop-types';\n\nfunction Profile({ user }) {\n    const { name, tag, location, avatar, stats } = user;\n    const { followers, views, likes } = stats;\n\n    return (\n        <Section>\n            <Container>\n                <Description>\n                    <Img src={avatar} alt=\"user avatar\" />\n                    <Name>{name}</Name>\n                    <Tag>{tag}</Tag>\n                    <Tag>{location}</Tag>\n                </Description>\n\n                <StatsList>\n                    <StatsListItem>\n                        <Label>Followers</Label>\n                        <Quantity>{followers}</Quantity>\n                    </StatsListItem>\n                    <StatsListItem>\n                        <Label>Views</Label>\n                        <Quantity>{views}</Quantity>\n                    </StatsListItem>\n                    <StatsListItem>\n                        <Label>Likes</Label>\n                        <Quantity>{likes}</Quantity>\n                    </StatsListItem>\n                </StatsList>\n            </Container>\n        </Section>\n    );\n}\n\nProfile.propTypes = {\n    user: PropTypes.exact({\n        name: PropTypes.string.isRequired,\n        tag: PropTypes.string,\n        location: PropTypes.string,\n        avatar: PropTypes.string,\n        stats: PropTypes.exact({\n            followers: PropTypes.number,\n            views: PropTypes.number,\n            likes: PropTypes.number,\n        }),\n    }).isRequired,\n};\n\nexport default Profile;\n","import styled from 'styled-components';\n\nfunction randomColor() {\n    return (\n        '#' +\n        (Math.random().toString(16) + '000000').substring(2, 8).toUpperCase()\n    );\n}\n\nconst Container = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: #f0f3f6;\n    border: 1px solid black;\n    width: 375px;\n    height: 252px;\n    margin-bottom: 20px;\n`;\n\nconst Title = styled.h2`\n    text-transform: uppercase;\n    font-size: 16px;\n    color: #475965;\n    font-weight: 600;\n    margin-bottom: 25px;\n`;\n\nconst List = styled.ul`\n    display: flex;\n    list-style: none;\n    width: 90%;\n`;\n\nconst ListItem = styled.li`\n    display: flex;\n    width: ${props => 100 / props.countItem}%;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 60px;\n    background-color: ${props => props.color};\n`;\n\nconst Percentage = styled.span`\n    font-size: 18px;\n    color: #fff;\n`;\n\nconst Label = styled(Percentage)`\n    font-size: 12px;\n    margin-bottom: 7px;\n`;\n\nexport { randomColor, Container, Title, List, ListItem, Label, Percentage };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    randomColor,\n    Container,\n    Title,\n    List,\n    ListItem,\n    Label,\n    Percentage,\n} from './styles';\n\nfunction Statistics({ title, stats }) {\n    return (\n        <Container>\n            {title && <Title>{title}</Title>}\n            <List>\n                {stats.map(element => (\n                    <ListItem\n                        color={randomColor()}\n                        countItem={stats.length}\n                        key={element.id}\n                    >\n                        <Label>{element.label}</Label>\n                        <Percentage>{element.percentage}%</Percentage>\n                    </ListItem>\n                ))}\n            </List>\n        </Container>\n    );\n}\n\nStatistics.defaultProps = {\n    title: '',\n};\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }),\n    ),\n};\n\nexport default Statistics;\n","import styled from 'styled-components';\n\nexport default styled.ul`\n    list-style: none;\n    width: 420px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nconst Item = styled.li`\n    display: flex;\n    width: 90%;\n    height: 110px;\n    justify-content: flex-start;\n    align-items: center;\n    box-shadow: 1px 3px 5px grey;\n    margin-bottom: 15px;\n    &:last-child {\n        margin-bottom: 0;\n    }\n`;\n\nconst Status = styled.span`\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background-color: ${props => (props.isOnline ? 'green' : 'red')};\n    margin: 15px;\n`;\n\nconst Img = styled.img`\n    border-radius: 10px;\n    margin-right: 15px;\n`;\n\nconst Name = styled.p`\n    font-size: 25px;\n`;\n\nexport { Item, Status, Img, Name };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, Status, Img, Name } from './styles';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n    return (\n        <Item>\n            <Status isOnline={isOnline}></Status>\n            <Img src={avatar} alt={name} width=\"96\" />\n            <Name>{name}</Name>\n        </Item>\n    );\n}\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string,\n    name: PropTypes.string,\n    isOnline: PropTypes.bool,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from './styles';\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nfunction FriendList({ friends }) {\n    return (\n        <List>\n            {friends.map(friend => (\n                <FriendListItem\n                    key={friend.id}\n                    avatar={friend.avatar}\n                    name={friend.name}\n                    isOnline={friend.isOnline}\n                />\n            ))}\n        </List>\n    );\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.number,\n            avatar: PropTypes.string,\n            name: PropTypes.string,\n            isOnline: PropTypes.bool,\n        }).isRequired,\n    ),\n};\n\nexport default FriendList;\n","import styled from 'styled-components';\n\nconst Table = styled.table`\n    width: 850px;\n`;\n\nconst TableHead = styled.thead`\n    text-transform: uppercase;\n    font-size: 13px;\n    color: #fff;\n`;\n\nconst TableHeadRow = styled.tr`\n    height: 50px;\n    background-color: #00bcd4;\n`;\n\nconst TableRow = styled.tr`\n    height: 50px;\n    text-align: center;\n    font-size: 15px;\n    color: #5c6975;\n    &:nth-child(2n) {\n        background-color: #ecf2f3;\n    }\n`;\n\nexport { Table, TableHead, TableHeadRow, TableRow };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableHead, TableHeadRow, TableRow } from './styles';\n\nfunction TransactionHistory({ items }) {\n    return (\n        <Table>\n            <TableHead>\n                <TableHeadRow>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </TableHeadRow>\n            </TableHead>\n\n            <tbody>\n                {items.map(item => (\n                    <TableRow key={item.id}>\n                        <td>{item.type}</td>\n                        <td>{item.amount}</td>\n                        <td>{item.currency}</td>\n                    </TableRow>\n                ))}\n            </tbody>\n        </Table>\n    );\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string,\n            type: PropTypes.string,\n            amount: PropTypes.string,\n            currency: PropTypes.string,\n        }).isRequired,\n    ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport user from '../user.json';\nimport statisticalData from '../statistical-data.json';\nimport friends from '../friends.json';\nimport transactions from '../transactions.json';\nimport Layout from './Layout/Layout';\nimport Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nexport default function App() {\n    return (\n        <Layout>\n            <Profile user={user} />\n            <Statistics stats={statisticalData} title=\"Upload stats\" />\n            <FriendList friends={friends} />\n            <TransactionHistory items={transactions} />\n        </Layout>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}