{"version":3,"sources":["components/Layout/Layout.js","components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Container","styled","div","Layout","children","Paragraph","p","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","Section","title","Button","button","FeedbackOptions","onLeaveFeedback","type","onClick","Notification","message","App","state","updateStatistics","statisticName","setState","countTotalFeedback","Object","values","reduce","acc","e","countPositiveFeedbackPercentage","Math","trunc","this","positiveFeedback","Component","ReactDOM","render","document","querySelector"],"mappings":"kXAIA,IAAMA,EAAYC,IAAOC,IAAV,KAIA,SAASC,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAC7B,OAAO,kBAACJ,EAAD,KAAYI,G,uJCLvB,IAAMC,EAAYJ,IAAOK,EAAV,KAOA,SAASC,EAAT,GAMX,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,mBAEA,OACI,oCACI,kBAACP,EAAD,cAAkBG,GAClB,kBAACH,EAAD,iBAAqBI,GACrB,kBAACJ,EAAD,aAAiBK,GACjB,kBAACL,EAAD,eAAmBM,GACnB,kBAACN,EAAD,2BAA+BO,EAA/B,M,4FCpBZ,IAAMC,EAAQZ,IAAOa,GAAV,KAGI,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOZ,EAAY,EAAZA,SACrC,OACI,iCACI,kBAACS,EAAD,KAAQG,GACPZ,G,sTCPb,IAAMa,EAAShB,IAAOiB,OAAV,KAaG,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACtC,OACI,oCACI,kBAACH,EAAD,CAAQI,KAAK,SAASC,QAAS,kBAAMF,EAAgB,UAArD,QAGA,kBAACH,EAAD,CAAQI,KAAK,SAASC,QAAS,kBAAMF,EAAgB,aAArD,WAGA,kBAACH,EAAD,CAAQI,KAAK,SAASC,QAAS,kBAAMF,EAAgB,SAArD,QCvBG,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAO,2BAAIA,G,ICGMC,E,4MACjBC,MAAQ,CACJlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTiB,iBAAmB,SAAAC,GACf,EAAKC,UAAS,SAAAH,GACV,OAAO,eACFE,EAAiBF,EAAME,IAAkB,O,EAKtDE,mBAAqB,WACjB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAE1C,OADAD,GAAOC,IAER,I,EAGPC,gCAAkC,WAC9B,OAA2B,IAApB,EAAKV,MAAMlB,KACZ6B,KAAKC,MAAO,EAAKZ,MAAMlB,KAAO,EAAKsB,qBAAwB,KAC3D,EAAKJ,MAAMlB,M,uDAGX,IAEFkB,EAIAa,KAJAb,MACAC,EAGAY,KAHAZ,iBACAG,EAEAS,KAFAT,mBACAM,EACAG,KADAH,gCAEI5B,EAAuBkB,EAAvBlB,KAAMC,EAAiBiB,EAAjBjB,QAASC,EAAQgB,EAARhB,IACjBC,EAAQmB,IACRU,EAAmBJ,IACzB,OACI,kBAACjC,EAAD,KACI,kBAACY,EAAD,CAASC,MAAM,yBACX,kBAACG,EAAD,CAAiBC,gBAAiBO,KAEtC,kBAACZ,EAAD,CAASC,MAAM,cACW,IAArBwB,EACG,kBAACjC,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB4B,IAGxB,kBAACjB,EAAD,CAAcC,QAAQ,4B,GArDbiB,a,MCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.be8ab1e0.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n    /* display: flex; */\n`;\n\nexport default function Layout({ children }) {\n    return <Container>{children}</Container>;\n}\n\nLayout.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element),\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Paragraph = styled.p`\n    margin-bottom: 10px;\n    &:last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport default function Statistics({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage,\n}) {\n    return (\n        <>\n            <Paragraph>Good: {good}</Paragraph>\n            <Paragraph>Neutral: {neutral}</Paragraph>\n            <Paragraph>Bad: {bad}</Paragraph>\n            <Paragraph>Total: {total}</Paragraph>\n            <Paragraph>Positive feedback: {positivePercentage}%</Paragraph>\n        </>\n    );\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Title = styled.h2`\n    margin: 20px 0;\n`;\nexport default function Section({ title, children }) {\n    return (\n        <section>\n            <Title>{title}</Title>\n            {children}\n        </section>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.element,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n    margin: 5px;\n    padding: 3px 7px;\n    font-weight: 700;\n    outline: none;\n    border: 1px solid grey;\n    border-radius: 5px;\n    &:hover {\n        cursor: pointer;\n        background-color: rgba(170, 170, 170, 0.4);\n    }\n`;\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n    return (\n        <>\n            <Button type=\"button\" onClick={() => onLeaveFeedback('good')}>\n                Good\n            </Button>\n            <Button type=\"button\" onClick={() => onLeaveFeedback('neutral')}>\n                Neutral\n            </Button>\n            <Button type=\"button\" onClick={() => onLeaveFeedback('bad')}>\n                Bad\n            </Button>\n        </>\n    );\n}\n\nFeedbackOptions.propTypes = {\n    onLeaveFeedback: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n    return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n    message: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport Layout from './Layout/Layout';\nimport Statistics from './Statistics/Statistics';\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Notification from './Notification/Notification';\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    updateStatistics = statisticName => {\n        this.setState(state => {\n            return {\n                [statisticName]: (state[statisticName] += 1),\n            };\n        });\n    };\n\n    countTotalFeedback = () => {\n        return Object.values(this.state).reduce((acc, e) => {\n            acc += e;\n            return acc;\n        }, 0);\n    };\n\n    countPositiveFeedbackPercentage = () => {\n        return this.state.good !== 0\n            ? Math.trunc((this.state.good / this.countTotalFeedback()) * 100)\n            : this.state.good;\n    };\n\n    render() {\n        const {\n            state,\n            updateStatistics,\n            countTotalFeedback,\n            countPositiveFeedbackPercentage,\n        } = this;\n        const { good, neutral, bad } = state;\n        const total = countTotalFeedback();\n        const positiveFeedback = countPositiveFeedbackPercentage();\n        return (\n            <Layout>\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions onLeaveFeedback={updateStatistics} />\n                </Section>\n                <Section title=\"Statistics\">\n                    {positiveFeedback !== 0 ? (\n                        <Statistics\n                            good={good}\n                            neutral={neutral}\n                            bad={bad}\n                            total={total}\n                            positivePercentage={positiveFeedback}\n                        />\n                    ) : (\n                        <Notification message=\"No feedback given\" />\n                    )}\n                </Section>\n            </Layout>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n// import SingupForm from './components/SingupForm/SingupForm';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}