{"version":3,"sources":["components/Layout/styles.js","components/Layout/Layout.js","components/ContactForm/styles.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/styles.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/styles.js","components/App.js","index.js"],"names":["styled","div","Layout","children","Form","form","Title","h3","Input","input","Button","button","ContactForm","state","name","number","handlerInput","e","target","value","setState","handlerSubmit","contact","id","uuid","this","onSubmit","props","type","onChange","Component","Filter","onInputChange","Li","li","ContactListItem","onRemove","onClick","ContactList","filtredName","map","key","h2","App","contacts","filter","handlerFilter","toLowerCase","includes","nameValidator","obj","find","addContact","preventDefault","window","alert","removeContact","contactId","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.11f126f5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n    width: 300px;\n`;\n","import React from 'react';\nimport Container from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function Layout({ children }) {\n    return <Container>{children}</Container>;\n}\n\nLayout.propTypes = {\n    children: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n    border: 1px solid grey;\n    padding: 5px;\n`;\n\nconst Title = styled.h3`\n    margin: 5px;\n`;\n\nconst Input = styled.input`\n    margin-bottom: 15px;\n`;\n\nconst Button = styled.button`\n    outline: none;\n    padding: 2px 5px;\n    border: 1px solid grey;\n    border-radius: 5px;\n    &:hover {\n        cursor: pointer;\n        background-color: rgba(0, 0, 255, 0.3);\n    }\n`;\n\nexport { Form, Title, Input, Button };\n","import React, { Component } from 'react';\nimport uuid from 'react-uuid';\nimport { Form, Title, Input, Button } from './styles';\nimport PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handlerInput = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    };\n\n    handlerSubmit = () => {\n        const { name, number } = this.state;\n        const contact = {\n            name: name,\n            number: number,\n            id: uuid(),\n        };\n\n        this.setState({ name: '', number: '' });\n\n        return contact;\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <Form\n                onSubmit={e =>\n                    this.props.handlerSubmit(e, this.handlerSubmit())\n                }\n            >\n                <Title>Name</Title>\n                <Input\n                    type=\"text\"\n                    value={name}\n                    name=\"name\"\n                    onChange={this.handlerInput}\n                />\n                <Title>Number</Title>\n                <Input\n                    type=\"text\"\n                    value={number}\n                    name=\"number\"\n                    onChange={this.handlerInput}\n                />\n                <br />\n                <Button type=\"submit\">Add contact</Button>\n            </Form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    handlerSubmit: PropTypes.func,\n    contacts: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            number: PropTypes.string,\n        }),\n    ),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ onInputChange, value }) {\n    return (\n        <>\n            <h3>Find contacts by name</h3>\n            <input\n                type=\"text\"\n                value={value}\n                name=\"filter\"\n                onChange={onInputChange}\n            />\n        </>\n    );\n}\n\nFilter.propTypes = {\n    onInputChange: PropTypes.func,\n    value: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    margin: 10px;\n`;\n\nconst Button = styled.button`\n    margin-left: 5px;\n    outline: none;\n    padding: 0 5px;\n    border: 1px solid grey;\n    border-radius: 5px;\n    &:hover {\n        cursor: pointer;\n        background-color: rgba(0, 0, 255, 0.3);\n    }\n`;\n\nexport { Li, Button };\n","import React from 'react';\nimport { Li, Button } from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function ContactListItem({ id, name, number, onRemove }) {\n    return (\n        <Li>\n            <span>\n                {name}: {number}\n            </span>\n            <Button type=\"button\" onClick={e => onRemove(id)}>\n                Delete\n            </Button>\n        </Li>\n    );\n}\n\nContactListItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onRemove: PropTypes.func,\n};\n","import React from 'react';\nimport ContactListItem from '../ContactListItem';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList({ filtredName, onRemove }) {\n    return (\n        <ul>\n            {filtredName.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                    onRemove={onRemove}\n                />\n            ))}\n        </ul>\n    );\n}\n\nContactList.propTypes = {\n    filtredName: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            number: PropTypes.string,\n        }),\n    ),\n    onRemove: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport default styled.h2`\n    margin: 15px 0;\n`;\n","import React, { Component } from 'react';\nimport Layout from './Layout';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport Title from './styles';\n\nexport default class App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    handlerInput = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    };\n\n    handlerFilter = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    nameValidator = obj => {\n        const { contacts } = this.state;\n\n        return contacts.find(({ name }) => name === obj.name);\n    };\n\n    addContact = (e, obj) => {\n        e.preventDefault();\n        this.setState(state => {\n            return !this.nameValidator(obj)\n                ? {\n                      contacts: [...state.contacts, obj],\n                      filter: '',\n                  }\n                : window.alert(`${obj.name} is already in contacts.`);\n        });\n    };\n\n    removeContact = contactId => {\n        this.setState(state => {\n            return {\n                contacts: state.contacts.filter(({ id }) => id !== contactId),\n                filter: '',\n            };\n        });\n    };\n\n    render() {\n        const { contacts, filter } = this.state;\n        const filtredName = this.handlerFilter();\n        return (\n            <Layout>\n                <Title>Phonebook</Title>\n                <ContactForm\n                    handlerSubmit={this.addContact}\n                    contacts={contacts}\n                />\n                <Title>Contacts</Title>\n                {contacts.length > 1 && (\n                    <Filter onInputChange={this.handlerInput} value={filter} />\n                )}\n                {contacts.length > 0 && (\n                    <ContactList\n                        filtredName={filtredName}\n                        onRemove={this.removeContact}\n                    />\n                )}\n            </Layout>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n// import SingupForm from './components/SingupForm/SingupForm';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}