{"version":3,"sources":["components/Layout/styles.js","components/Layout/Layout.js","components/Searchbar/styles.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/styles.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/styles.js","components/ImageGallery/ImageGallery.js","components/Spinner/styles.js","components/Spinner/Spinner.js","components/Button/styles.js","components/Button/Button.js","components/Modal/styles.js","components/Modal/Modal.js","services/imagesApi.js","components/App.js","index.js"],"names":["styled","div","Layout","children","Header","header","Form","form","Button","button","Label","span","Input","input","Searchbar","state","queryString","handlerInput","e","setState","target","value","handlerFormSubmit","preventDefault","props","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ListItem","li","Img","img","ImageGalleryItem","webformatURL","tags","largeImageURL","onImgClick","src","onClick","alt","data-largeimg","ul","ImageGallery","images","map","image","key","id","Spinner","color","height","width","timeout","scrollTo","Overlay","ModalWindow","Modal","onOverlayClick","imageUrl","baseURL","apiKey","perPage","getImages","query","page","fetch","then","response","json","data","hits","App","selectImgUrl","loading","handlerButton","fetchImages","imagesApi","prevState","window","top","document","documentElement","scrollHeight","behavior","updateQuery","onGalleryImageClick","dataset","largeimg","onEscape","code","closeModal","currentTarget","prevProps","querySelector","classList","add","addEventListener","remove","removeEventListener","length","ReactDOM","render"],"mappings":"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","file":"static/js/main.1326b4d4.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 16px;\n    padding-bottom: 24px;\n`;\n","import React from 'react';\nimport Container from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function Layout({ children }) {\n    return <Container>{children}</Container>;\n}\n\nLayout.propTypes = {\n    children: PropTypes.any,\n};\n","import styled from 'styled-components';\n\nconst Header = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n        0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nconst Button = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nconst Label = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`;\n\nconst Input = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n`;\n\nexport { Header, Form, Button, Label, Input };\n","import React, { Component } from 'react';\nimport { Header, Form, Button, Label, Input } from './styles';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func,\n    };\n\n    state = {\n        queryString: '',\n    };\n\n    handlerInput = e => {\n        this.setState({ queryString: e.target.value });\n    };\n\n    handlerFormSubmit = e => {\n        e.preventDefault();\n        this.props.onSubmit(this.state.queryString);\n        this.setState({ queryString: '' });\n    };\n    render() {\n        return (\n            <Header>\n                <Form onSubmit={this.handlerFormSubmit}>\n                    <Button type=\"submit\">\n                        <Label>Search</Label>\n                    </Button>\n\n                    <Input\n                        type=\"text\"\n                        onChange={this.handlerInput}\n                        value={this.state.queryString}\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                    />\n                </Form>\n            </Header>\n        );\n    }\n}\n","import styled from 'styled-components';\n\nconst ListItem = styled.li`\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n        0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Img = styled.img`\n    width: 100%;\n    height: 238px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        transform: scale(1.03);\n        cursor: zoom-in;\n    }\n`;\n\nexport { ListItem, Img };\n","import React from 'react';\nimport { ListItem, Img } from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n    webformatURL,\n    tags,\n    largeImageURL,\n    onImgClick,\n}) {\n    return (\n        <ListItem>\n            <Img\n                src={webformatURL}\n                onClick={onImgClick}\n                alt={tags}\n                data-largeimg={largeImageURL}\n            />\n        </ListItem>\n    );\n}\n\nImageGalleryItem.propTypes = {\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string,\n    largeImageURL: PropTypes.string.isRequired,\n    onImgClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport default styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport List from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGallery({ images, onImgClick }) {\n    return (\n        <List>\n            {images.map(image => (\n                <ImageGalleryItem\n                    key={image.id}\n                    webformatURL={image.webformatURL}\n                    tags={image.tags}\n                    largeImageURL={image.largeImageURL}\n                    onImgClick={onImgClick}\n                />\n            ))}\n        </List>\n    );\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            webformatURL: PropTypes.string.isRequired,\n            tags: PropTypes.string,\n            largeImageURL: PropTypes.string.isRequired,\n        }),\n    ),\n    onImgClick: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport default styled.div`\n    margin: 0 auto;\n`;\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport Container from './styles';\n\nexport default class Spinner extends Component {\n    static propTypes = {\n        height: PropTypes.number,\n        width: PropTypes.number,\n    };\n\n    render() {\n        return (\n            <Container>\n                <Loader\n                    type=\"ThreeDots\"\n                    color=\"#00BFFF\"\n                    height={this.props.height}\n                    width={this.props.width}\n                    timeout={3000} //3 secs\n                />\n            </Container>\n        );\n    }\n}\n","import styled from 'styled-components';\n\nexport default styled.button`\n    padding: 8px 16px;\n    border-radius: 2px;\n    background-color: #3f51b5;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    text-align: center;\n    display: inline-block;\n    color: #fff;\n    border: 0;\n    text-decoration: none;\n    cursor: pointer;\n    font-family: inherit;\n    font-size: 18px;\n    line-height: 24px;\n    margin: 0 auto;\n    font-style: normal;\n    font-weight: 500;\n    min-width: 180px;\n    max-width: fit-content;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    &:hover,\n    :focus {\n        background-color: #303f9f;\n    }\n`;\n","import React, { Component } from 'react';\nimport Btn from './styles';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n    static propTypes = {\n        onClick: PropTypes.func.isRequired,\n        scrollTo: PropTypes.func.isRequired,\n    };\n\n    componentDidMount() {\n        this.props.scrollTo();\n    }\n    render() {\n        return (\n            <Btn onClick={this.props.onClick} type=\"button\">\n                Load more\n            </Btn>\n        );\n    }\n}\n","import styled from 'styled-components';\n\nconst Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n`;\n\nconst ModalWindow = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`;\n\nexport { Overlay, ModalWindow };\n","import React from 'react';\nimport { Overlay, ModalWindow } from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function Modal({ onOverlayClick, imageUrl }) {\n    return (\n        <Overlay onClick={onOverlayClick}>\n            <ModalWindow>\n                <img src={imageUrl} alt=\"\" />\n            </ModalWindow>\n        </Overlay>\n    );\n}\n\nModal.propTypes = {\n    onOverlayClick: PropTypes.func,\n    imageUrl: PropTypes.string.isRequired,\n};\n","export default {\n    baseURL: 'https://pixabay.com/api//',\n    apiKey: '17512246-8cb81e257606609dfb7634e3b',\n    perPage: 12,\n\n    getImages(query, page) {\n        return fetch(\n            `https://pixabay.com/api/?q=${query}&page=${page}&key=${this.apiKey}&image_type=photo&orientation=horizontal&per_page=${this.perPage}`,\n        )\n            .then(response => response.json())\n            .then(data => data.hits);\n    },\n};\n","import React, { Component } from 'react';\nimport Layout from './Layout';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Spinner from './Spinner/Spinner';\nimport Button from './Button/Button';\nimport Modal from './Modal/Modal';\nimport imagesApi from '../services/imagesApi';\n\nexport default class App extends Component {\n    state = {\n        images: [],\n        query: '',\n        page: 1,\n        selectImgUrl: null,\n        loading: false,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { query, selectImgUrl } = this.state;\n\n        if (selectImgUrl) {\n            document.querySelector('body').classList.add('scroll_off');\n            window.addEventListener('keydown', this.onEscape);\n        } else {\n            document.querySelector('body').classList.remove('scroll_off');\n            window.removeEventListener('keydown', this.onEscape);\n        }\n\n        if (prevState.query !== query) {\n            this.fetchImages();\n        }\n    }\n\n    handlerButton = () => {\n        this.fetchImages();\n    };\n\n    fetchImages = () => {\n        this.setState({ loading: true });\n        imagesApi.getImages(this.state.query, this.state.page).then(images => {\n            this.setState(prevState => ({\n                images: [...prevState.images, ...images],\n                page: prevState.page + 1,\n                loading: false,\n            }));\n        });\n    };\n\n    scrollTo = () => {\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    };\n\n    updateQuery = query => {\n        this.setState({ query: query, page: 1, images: [] });\n    };\n\n    onGalleryImageClick = e => {\n        this.setState({ selectImgUrl: e.target.dataset.largeimg });\n    };\n\n    onEscape = e => {\n        if (e.code === 'Escape') {\n            this.closeModal();\n        }\n    };\n\n    closeModal = () => {\n        this.setState({ selectImgUrl: null });\n    };\n\n    onOverlayClick = e => {\n        if (e.target === e.currentTarget) {\n            this.closeModal();\n        }\n    };\n\n    render() {\n        const { images, selectImgUrl, loading } = this.state;\n        return (\n            <Layout>\n                <Searchbar onSubmit={this.updateQuery} />\n                {loading && <Spinner height={100} width={100} />}\n                {images.length > 0 && (\n                    <ImageGallery\n                        images={images}\n                        onImgClick={this.onGalleryImageClick}\n                    />\n                )}\n\n                {images.length > 0 && loading && (\n                    <Spinner height={100} width={100} />\n                )}\n\n                {images.length > 0 && !loading && (\n                    <Button\n                        onClick={this.handlerButton}\n                        scrollTo={this.scrollTo}\n                    />\n                )}\n                {selectImgUrl && (\n                    <Modal\n                        imageUrl={selectImgUrl}\n                        onOverlayClick={this.onOverlayClick}\n                    />\n                )}\n            </Layout>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n// import SingupForm from './components/SingupForm/SingupForm';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}