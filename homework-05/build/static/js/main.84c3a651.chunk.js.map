{"version":3,"sources":["components/Layout/styles.js","components/Layout/Layout.js","components/ContactForm/styles.js","components/ContactForm/ContactForm.js","components/Filter/styles.js","components/Filter/Filter.js","components/ContactListItem/styles.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/styles.js","components/App.js","index.js"],"names":["styled","div","Layout","children","Form","form","Title","p","Input","input","Button","button","ContactForm","state","name","number","handlerInput","e","target","value","setState","handlerSubmit","preventDefault","contact","id","uuid","props","this","avalibleContact","onSubmit","type","onChange","disabled","Component","Container","FilterInput","Filter","onInputChange","Li","li","Span","span","ContactListItem","onRemove","onClick","ContactList","filtredName","TransitionGroup","component","map","CSSTransition","key","classNames","timeout","h2","InfoMessage","contacts","App","filter","nameAlreadyExist","handlerFilter","toLowerCase","includes","nameValidator","find","addContact","setTimeout","removeContact","contactId","parcedLocalStorage","JSON","parse","localStorage","getItem","prevProps","prevState","length","setItem","stringify","removeItem","in","appear","unmountOnExit","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.84c3a651.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n    width: 400px;\n    position: relative;\n`;\n","import React from 'react';\nimport Container from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function Layout({ children }) {\n    return <Container>{children}</Container>;\n}\n\nLayout.propTypes = {\n    children: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n    box-shadow: 1px 1px 3px grey;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst Title = styled.p`\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n        Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n\nconst Input = styled.input`\n    margin-bottom: 10px;\n    padding: 5px;\n    width: 100%;\n    border: 1px solid grey;\n    border-radius: 3px;\n    &:active,\n    :focus {\n        outline: none;\n        border-color: #3645ac;\n    }\n`;\n\nconst Button = styled.button`\n    outline: none;\n    padding: 5px;\n    border: 1px solid transparent;\n    color: #fff;\n    background-color: #3645ac;\n    border-radius: 3px;\n    box-shadow: 1px 1px 3px #3645ac;\n    width: 100%;\n    &:hover {\n        cursor: pointer;\n        background-color: #243398;\n    }\n    &:disabled {\n        background-color: grey;\n    }\n`;\n\nexport { Form, Title, Input, Button };\n","import React, { Component } from 'react';\nimport uuid from 'react-uuid';\nimport { Form, Title, Input, Button } from './styles';\nimport PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handlerInput = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    };\n\n    handlerSubmit = e => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        const contact = {\n            name: name,\n            number: number,\n            id: uuid(),\n        };\n\n        this.props.handlerSubmit(contact);\n\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        const avalibleContact = name !== '' && number !== '';\n\n        return (\n            <Form onSubmit={this.handlerSubmit}>\n                <Title>Name</Title>\n                <Input\n                    type=\"text\"\n                    value={name}\n                    name=\"name\"\n                    onChange={this.handlerInput}\n                />\n                <Title>Number</Title>\n                <Input\n                    type=\"text\"\n                    value={number}\n                    name=\"number\"\n                    onChange={this.handlerInput}\n                />\n                <br />\n                <Button type=\"submit\" disabled={!avalibleContact}>\n                    Add contact\n                </Button>\n            </Form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    handlerSubmit: PropTypes.func,\n    contacts: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            number: PropTypes.string,\n        }),\n    ),\n};\n","import { Input } from '../ContactForm/styles';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    box-shadow: 1px 1px 3px grey;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst FilterInput = styled(Input)`\n    margin-bottom: 0;\n`;\n\nexport { Container, FilterInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '../ContactForm/styles';\nimport { Container, FilterInput } from './styles';\n\nexport default function Filter({ onInputChange, value }) {\n    return (\n        <Container>\n            <Title>Find contacts by name</Title>\n            <FilterInput\n                type=\"text\"\n                value={value}\n                name=\"filter\"\n                onChange={onInputChange}\n            />\n        </Container>\n    );\n}\n\nFilter.propTypes = {\n    onInputChange: PropTypes.func,\n    value: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 10px 0;\n    padding: 10px;\n    box-shadow: 1px 1px 3px grey;\n`;\n\nconst Button = styled.button`\n    position: relative;\n    margin-left: 10px;\n    color: #fff;\n    font-size: 25px;\n    width: 25px;\n    height: 25px;\n    outline: none;\n    padding: 0 5px;\n    border: none;\n    border-radius: 5px;\n    background-color: #f1392d;\n    &:hover {\n        cursor: pointer;\n        background-color: #b2261b;\n    }\n    &::before {\n        content: '+';\n        position: absolute;\n        top: 55%;\n        left: 0;\n        transform: rotate(45deg) translate(-50%, -50%);\n    }\n`;\n\nconst Span = styled.span`\n    display: flex;\n    align-items: center;\n`;\n\nexport { Li, Button, Span };\n","import React from 'react';\nimport { Li, Button, Span } from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function ContactListItem({ id, name, number, onRemove }) {\n    return (\n        <Li>\n            <span>{name}</span>\n            <Span>\n                {number}\n                <Button type=\"button\" onClick={e => onRemove(id)} />\n            </Span>\n\n            {/* <Button type=\"button\" onClick={e => onRemove(id)}>\n                Delete\n            </Button> */}\n        </Li>\n    );\n}\n\nContactListItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onRemove: PropTypes.func,\n};\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactListItem from '../ContactListItem';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList({ filtredName, onRemove }) {\n    return (\n        <TransitionGroup component=\"ul\">\n            {filtredName.map(({ id, name, number }) => (\n                <CSSTransition\n                    key={id}\n                    classNames=\"ContactList-fade\"\n                    timeout={250}\n                >\n                    <ContactListItem\n                        id={id}\n                        name={name}\n                        number={number}\n                        onRemove={onRemove}\n                    />\n                </CSSTransition>\n            ))}\n        </TransitionGroup>\n    );\n}\n\nContactList.propTypes = {\n    filtredName: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            number: PropTypes.string,\n        }),\n    ),\n    onRemove: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nconst Title = styled.h2`\n    margin: 15px 0;\n    color: #3446ac;\n`;\n\nconst InfoMessage = styled.div`\n    position: absolute;\n    top: 12px;\n    right: -30px;\n    padding: 10px 50px;\n    font-size: 12px;\n    border-radius: 5px;\n    color: #fff;\n    background-color: #f1392d;\n`;\n\nexport { Title, InfoMessage };\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Layout from './Layout';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport { Title, InfoMessage } from './styles';\n\nconst contacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default class App extends Component {\n    state = {\n        contacts: contacts,\n        filter: '',\n        nameAlreadyExist: false,\n    };\n\n    componentDidMount() {\n        const parcedLocalStorage = JSON.parse(localStorage.getItem('contacts'));\n\n        this.setState({\n            contacts: parcedLocalStorage\n                ? parcedLocalStorage\n                : this.state.contacts,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.contacts.length !== this.state.contacts.length) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n            if (this.state.contacts.length < 1) {\n                localStorage.removeItem('contacts');\n            }\n        }\n    }\n\n    handlerInput = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    };\n\n    handlerFilter = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    nameValidator = contact => {\n        const { contacts } = this.state;\n\n        return contacts.find(({ name }) => name === contact.name);\n    };\n\n    addContact = contact => {\n        if (!this.nameValidator(contact)) {\n            this.setState(state => ({\n                contacts: [contact, ...state.contacts],\n                filter: '',\n            }));\n\n            return;\n        }\n\n        this.setState({ nameAlreadyExist: true });\n        setTimeout(() => this.setState({ nameAlreadyExist: false }), 1500);\n    };\n\n    removeContact = contactId => {\n        this.setState(state => {\n            return {\n                contacts: state.contacts.filter(({ id }) => id !== contactId),\n                filter: '',\n            };\n        });\n    };\n\n    render() {\n        const { contacts, filter, nameAlreadyExist } = this.state;\n        const filtredName = this.handlerFilter();\n        return (\n            <Layout>\n                <CSSTransition\n                    in={nameAlreadyExist}\n                    appear\n                    classNames=\"InfoMessage-fade\"\n                    timeout={500}\n                    unmountOnExit\n                >\n                    <InfoMessage>Contact already exists!</InfoMessage>\n                </CSSTransition>\n\n                <CSSTransition\n                    in={true}\n                    appear\n                    classNames=\"Title-fade\"\n                    timeout={500}\n                    unmountOnExit\n                >\n                    <Title>Phonebook</Title>\n                </CSSTransition>\n                <ContactForm\n                    handlerSubmit={this.addContact}\n                    contacts={contacts}\n                />\n                {contacts.length > 1 && (\n                    <Filter onInputChange={this.handlerInput} value={filter} />\n                )}\n                {contacts.length > 0 && (\n                    <ContactList\n                        filtredName={filtredName}\n                        onRemove={this.removeContact}\n                    />\n                )}\n            </Layout>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\nimport './styles.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}