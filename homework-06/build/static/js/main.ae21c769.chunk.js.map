{"version":3,"sources":["redux/phoneBook/phoneBookActions.js","components/Layout/styles.js","components/Layout/Layout.js","components/ContactForm/styles.js","components/ContactForm/ContactForm.js","components/Filter/styles.js","components/Filter/Filter.js","components/ContactListItem/styles.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/styles.js","components/App.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["createContact","createAction","name","phone","payload","id","uuid","togglerFlag","removeContact","filter","styled","div","Layout","children","Form","form","Title","p","Input","input","Button","button","ContactForm","state","number","handlerInput","e","target","value","setState","handlerSubmit","preventDefault","props","this","avalibleContact","onSubmit","type","onChange","disabled","Component","mapDispatchToProps","connect","Container","FilterInput","onFilter","filterValue","items","length","Li","li","Span","span","ownProps","contact","find","item","dispatch","onClick","toLowerCase","includes","TransitionGroup","component","in","map","CSSTransition","key","classNames","timeout","h2","InfoMessage","isNameAlreadyExist","setTimeout","appear","unmountOnExit","contactsReducer","createReducer","action","newContacts","store","configureStore","reducer","phoneBookReduser","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ae21c769.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport uuid from 'react-uuid';\n\nconst constactCreator = (name, phone) => ({\n    payload: {\n        id: uuid(),\n        name,\n        phone,\n    },\n});\n\nexport const createContact = createAction('CREATE_CONTACT', constactCreator);\nexport const togglerFlag = createAction('CHANGE_FLAG');\nexport const removeContact = createAction('REMOVE_CONTACT');\nexport const filter = createAction('FILTER');\n","import styled from 'styled-components';\n\nexport default styled.div`\n    width: 400px;\n    position: relative;\n`;\n","import React from 'react';\nimport Container from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function Layout({ children }) {\n    return <Container>{children}</Container>;\n}\n\nLayout.propTypes = {\n    children: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n    box-shadow: 1px 1px 3px grey;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst Title = styled.p`\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n        Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n\nconst Input = styled.input`\n    margin-bottom: 10px;\n    padding: 5px;\n    width: 100%;\n    border: 1px solid grey;\n    border-radius: 3px;\n    &:active,\n    :focus {\n        outline: none;\n        border-color: #3645ac;\n    }\n`;\n\nconst Button = styled.button`\n    outline: none;\n    padding: 5px;\n    border: 1px solid transparent;\n    color: #fff;\n    background-color: #3645ac;\n    border-radius: 3px;\n    box-shadow: 1px 1px 3px #3645ac;\n    width: 100%;\n    &:hover {\n        cursor: pointer;\n        background-color: #243398;\n    }\n    &:disabled {\n        background-color: grey;\n    }\n`;\n\nexport { Form, Title, Input, Button };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createContact } from '../../redux/phoneBook/phoneBookActions';\nimport { Form, Title, Input, Button } from './styles';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n    static propTypes = {\n        createContact: PropTypes.func,\n    };\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handlerInput = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    };\n\n    handlerSubmit = e => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        this.props.createContact(name, number);\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        const avalibleContact = name !== '' && number !== '';\n\n        return (\n            <Form onSubmit={this.handlerSubmit}>\n                <Title>Name</Title>\n                <Input\n                    type=\"text\"\n                    value={name}\n                    name=\"name\"\n                    onChange={this.handlerInput}\n                />\n                <Title>Number</Title>\n                <Input\n                    type=\"text\"\n                    value={number}\n                    name=\"number\"\n                    onChange={this.handlerInput}\n                />\n                <br />\n                <Button type=\"submit\" disabled={!avalibleContact}>\n                    Add contact\n                </Button>\n            </Form>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    createContact,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { Input } from '../ContactForm/styles';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    box-shadow: 1px 1px 3px grey;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst FilterInput = styled(Input)`\n    margin-bottom: 0;\n`;\n\nexport { Container, FilterInput };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filter } from '../../redux/phoneBook/phoneBookActions';\nimport { Title } from '../ContactForm/styles';\nimport { Container, FilterInput } from './styles';\n\nconst Filter = ({ filterValue, items, onFilter }) => {\n    const handlerFilter = e => onFilter(e.target.value);\n    return (\n        items.length > 1 && (\n            <Container>\n                <Title>Find contacts by name</Title>\n                <FilterInput\n                    type=\"text\"\n                    value={filterValue}\n                    name=\"filter\"\n                    onChange={handlerFilter}\n                />\n            </Container>\n        )\n    );\n};\n\nFilter.propTypes = {\n    onFilter: PropTypes.func.isRequired,\n    filterValue: PropTypes.string,\n    items: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            phone: PropTypes.string.isRequired,\n        }).isRequired,\n    ),\n};\n\nconst mapStateToProps = state => ({\n    filterValue: state.filter,\n    items: state.items,\n});\n\nconst mapDispatchToProps = {\n    onFilter: filter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from 'styled-components';\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 10px 0;\n    padding: 10px;\n    box-shadow: 1px 1px 3px grey;\n`;\n\nconst Button = styled.button`\n    position: relative;\n    margin-left: 10px;\n    color: #fff;\n    font-size: 25px;\n    width: 25px;\n    height: 25px;\n    outline: none;\n    padding: 0 5px;\n    border: none;\n    border-radius: 5px;\n    background-color: #f1392d;\n    &:hover {\n        cursor: pointer;\n        background-color: #b2261b;\n    }\n    &::before {\n        content: '+';\n        position: absolute;\n        top: 55%;\n        left: 0;\n        transform: rotate(45deg) translate(-50%, -50%);\n    }\n`;\n\nconst Span = styled.span`\n    display: flex;\n    align-items: center;\n`;\n\nexport { Li, Button, Span };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeContact } from '../../redux/phoneBook/phoneBookActions';\nimport { Li, Button, Span } from './styles';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ name, phone, removeContact }) => (\n    <Li>\n        <span>{name}</span>\n        <Span>\n            {phone}\n            <Button type=\"button\" onClick={removeContact} />\n        </Span>\n    </Li>\n);\n\nContactListItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    phone: PropTypes.string,\n    removeContact: PropTypes.func,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const contact = state.items.find(item => item.id === ownProps.id);\n    return {\n        ...contact,\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    removeContact: () => dispatch(removeContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport ContactListItem from '../ContactListItem';\nimport PropTypes from 'prop-types';\n\nfunction ContactList({ items }) {\n    return (\n        <TransitionGroup component=\"ul\" in={items.length}>\n            {items.map(({ id }) => (\n                <CSSTransition\n                    key={id}\n                    classNames=\"ContactList-fade\"\n                    timeout={250}\n                >\n                    <ContactListItem id={id} />\n                </CSSTransition>\n            ))}\n        </TransitionGroup>\n    );\n}\n\nContactList.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            phone: PropTypes.string.isRequired,\n        }).isRequired,\n    ),\n    filter: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const { items, filter } = state;\n    const filtredItems = items.filter(item =>\n        item.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n    return {\n        items: filtredItems,\n    };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import styled from 'styled-components';\n\nconst Title = styled.h2`\n    margin: 15px 0;\n    color: #3446ac;\n`;\n\nconst InfoMessage = styled.div`\n    position: absolute;\n    top: 12px;\n    right: -30px;\n    padding: 10px 50px;\n    font-size: 12px;\n    border-radius: 5px;\n    color: #fff;\n    background-color: #f1392d;\n`;\n\nexport { Title, InfoMessage };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport { togglerFlag } from '../redux/phoneBook/phoneBookActions';\nimport Layout from './Layout';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport { Title, InfoMessage } from './styles';\n\nconst App = ({ isNameAlreadyExist, togglerFlag }) => {\n    if (isNameAlreadyExist) {\n        setTimeout(() => {\n            togglerFlag();\n        }, 2000);\n    }\n    return (\n        <Layout>\n            <CSSTransition in appear classNames=\"Title-fade\" timeout={500}>\n                <Title>Phonebook</Title>\n            </CSSTransition>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n            <CSSTransition\n                in={isNameAlreadyExist}\n                classNames=\"InfoMessage-fade\"\n                timeout={250}\n                unmountOnExit\n            >\n                <InfoMessage>Contact already exists!</InfoMessage>\n            </CSSTransition>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isNameAlreadyExist: state.isNameAlreadyExist,\n});\n\nconst mapDispatchToProps = {\n    togglerFlag,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n    createContact,\n    togglerFlag,\n    removeContact,\n    filter,\n} from './phoneBookActions';\n\nconst initialState = {\n    items: [],\n    filter: '',\n    isNameAlreadyExist: false,\n};\n\nconst setContact = (state, action) => {\n    const isNameExist = state.items.find(\n        item => item.name === action.payload.name,\n    );\n    return isNameExist\n        ? { ...state, isNameAlreadyExist: !state.isNameAlreadyExist }\n        : { ...state, items: [action.payload, ...state.items] };\n};\n\nconst toggleFlag = (state, action) => ({\n    ...state,\n    isNameAlreadyExist: !state.isNameAlreadyExist,\n});\n\nconst onRemoveContact = (state, action) => {\n    const newContacts = state.items.filter(item => item.id !== action.payload);\n    return { ...state, items: [...newContacts] };\n};\n\nconst onFilter = (state, action) => ({ ...state, filter: action.payload });\n\nconst contactsReducer = createReducer(initialState, {\n    [createContact]: setContact,\n    [togglerFlag]: toggleFlag,\n    [removeContact]: onRemoveContact,\n    [filter]: onFilter,\n});\n\nexport default contactsReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport phoneBookReduser from './phoneBook/phoneBookReducer';\n\nconst store = configureStore({\n    reducer: phoneBookReduser,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\nimport './base.css';\nimport './styles.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}