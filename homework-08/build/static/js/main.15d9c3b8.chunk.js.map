{"version":3,"sources":["components/UserMenu/styles.module.css","images/mail.svg","images/passw.svg","images/user.svg","components/Navigation/styles.module.css","components/Layout/styles.js","components/Layout/Layout.js","redux/phoneBook/phoneBookActions.js","redux/phoneBook/phoneBookSelectors.js","redux/auth/authActions.js","redux/auth/authSelectors.js","redux/auth/authOperations.js","redux/auth/authReducer.js","redux/phoneBook/phoneBookOperations.js","redux/phoneBook/phoneBookReducer.js","components/ContactForm/styles.js","components/ContactForm/ContactForm.js","components/Filter/styles.js","components/Filter/Filter.js","components/ContactListItem/styles.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/styles.js","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/SingUpForm/styles.js","components/SingInForm/SingInForm.js","components/SingUpForm/SingUpForm.js","routes.js","views/HomeView.js","views/LoginView.js","views/RegisterView.js","components/common/Rotes/PablicRotes.js","components/common/Rotes/PrivateRoute.js","components/App.js","redux/store.js","index.js"],"names":["module","exports","styled","div","Layout","children","createContactRequest","createAction","createContactSuccess","createContactFailed","createContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","togglerFlag","filter","getContacts","state","contacts","items","getFilter","getFiltredContacts","createSelector","item","name","toLowerCase","includes","getLoading","loading","getIsNameAlreadyExist","isNameAlreadyExist","getContactById","contactId","find","contact","id","registerRequest","registerSuccess","registerError","registerCleanError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","getAllTasksRequest","getAllTasksSuccess","getAllTasksError","auth","user","token","authError","authLoading","baseURL","credentials","dispatch","authActions","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","catch","getState","persistedToken","Authorization","authSelectors","error","initialState","email","createReducer","_","action","payload","combineReducers","phoneBookActions","authorization","number","phoneBookSelectors","Form","form","Title","p","Input","input","Button","button","ContactForm","useDispatch","useState","setName","setNumber","avalibleContact","onSubmit","e","preventDefault","phoneBookOperations","type","value","onChange","target","disabled","Container","FilterInput","Filter","useSelector","filterValue","length","Li","li","Span","span","ContactListItem","onClick","ContactList","useEffect","TransitionGroup","component","in","map","CSSTransition","key","classNames","timeout","h2","InfoMessage","UserMenu","className","styles","authOperations","Navigation","container","appear","MyButton","MyLink","Link","FormGroup","Group","EmailLabel","Label","mail","EmailInput","Control","props","isValid","PasswordLabel","passw","PasswordInput","UserLabel","SingInForm","isLoading","setEmail","password","setPassword","emailValid","passwordValid","btnActive","controlId","placeholder","variant","color","height","width","to","SingUpForm","confirmPassword","setConfirmPassword","nameValid","confirmPasswordValid","path","exact","label","private","restricted","setTimeout","unmountOnExit","isUserLoginError","isEmailAlreadyExist","PablicRoute","Component","rest","isAuthenticated","render","PrivateRoute","App","routes","route","authPersistConfig","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phoneBookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.15d9c3b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"styles_span__1NWeA\",\"button\":\"styles_button__1wFin\"};","module.exports = __webpack_public_path__ + \"static/media/mail.1b264daa.svg\";","module.exports = __webpack_public_path__ + \"static/media/passw.0ff38154.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c17c59c2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3Ktgh\"};","import styled from 'styled-components';\n\nexport default styled.div`\n    padding-top: 100px;\n    width: 400px;\n    position: relative;\n`;\n","import React from 'react';\nimport Container from './styles';\nimport PropTypes from 'prop-types';\n\nexport default function Layout({ children }) {\n    return <Container>{children}</Container>;\n}\n\nLayout.propTypes = {\n    children: PropTypes.any,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst createContactRequest = createAction('CREATE_CONTACT_REQUEST');\nconst createContactSuccess = createAction('CREATE_CONTACT_SUCCESS');\nconst createContactFailed = createAction('CREATE_CONTACT_FAILED');\nconst createContactError = createAction('CREATE_CONTACT_ERROR');\n\nconst fetchContactsRequest = createAction('FETCH_CONTACT_REQUEST');\nconst fetchContactsSuccess = createAction('FETCH_CONTACT_SUCCESS');\nconst fetchContactsError = createAction('FETCH_CONTACT_ERROR');\n\nconst removeContactRequest = createAction('REMOVE_CONTACT_REQUEST');\nconst removeContactSuccess = createAction('REMOVE_CONTACT_SUCCESS');\nconst removeContactError = createAction('REMOVE_CONTACT_ERROR');\n\nconst togglerFlag = createAction('CHANGE_FLAG');\nconst filter = createAction('FILTER');\n\nexport default {\n    createContactRequest,\n    createContactSuccess,\n    createContactFailed,\n    createContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    removeContactRequest,\n    removeContactSuccess,\n    removeContactError,\n    togglerFlag,\n    filter,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getLoading = state => state.contacts.loading;\nconst getIsNameAlreadyExist = state => state.contacts.isNameAlreadyExist;\n\nconst getFiltredContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) =>\n        contacts.filter(item =>\n            item.name.toLowerCase().includes(filter.toLowerCase()),\n        ),\n);\n\nconst getContactById = createSelector(\n    [(state, contactId) => contactId, getFiltredContacts],\n    (contactId, contacts) => contacts.find(contact => contact.id === contactId),\n);\n\nexport default {\n    getContacts,\n    getFilter,\n    getLoading,\n    getIsNameAlreadyExist,\n    getFiltredContacts,\n    getContactById,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\nconst registerCleanError = createAction('auth/registerCleanError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst getAllTasksRequest = createAction('auth/getAllTasksRequest');\nconst getAllTasksSuccess = createAction('auth/getAllTasksSuccess');\nconst getAllTasksError = createAction('auth/getAllTasksError');\n\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    registerCleanError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n    getAllTasksRequest,\n    getAllTasksSuccess,\n    getAllTasksError,\n};\n","const getUserName = state => state.auth.user.name;\nconst getToken = state => state.auth.token;\nconst getError = state => state.auth.authError;\nconst getIsLoading = state => state.auth.authLoading;\n\nexport default { getUserName, getToken, getError, getIsLoading };\n","import authActions from './authActions';\nimport authSelectors from './authSelectors';\n\nconst baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst register = credentials => dispatch => {\n    dispatch(authActions.registerRequest());\n\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n    };\n\n    fetch(`${baseURL}/users/signup`, options)\n        .then(response => response.json())\n        .then(data => dispatch(authActions.registerSuccess(data)))\n        .catch(() => dispatch(authActions.registerError()));\n};\n\nconst logIn = credentials => dispatch => {\n    dispatch(authActions.loginRequest());\n\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n    };\n\n    fetch(`${baseURL}/users/login`, options)\n        .then(response => response.json())\n        .then(data => dispatch(authActions.loginSuccess(data)))\n        .catch(() => dispatch(authActions.registerError()));\n};\n\nconst logOut = () => (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n    dispatch(authActions.logoutRequest());\n\n    const options = {\n        method: 'POST',\n        headers: {\n            Authorization: `Bearer ${persistedToken}`,\n            'Content-Type': 'application/json',\n        },\n    };\n    fetch(`${baseURL}/users/logout`, options)\n        .then(() => dispatch(authActions.logoutSuccess()))\n        .catch(() => dispatch(authActions.registerError()));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n    const persistedToken = authSelectors.getToken(getState());\n    if (!persistedToken) {\n        return;\n    }\n    dispatch(authActions.getCurrentUserRequest());\n\n    const options = {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${persistedToken}`,\n            'Content-Type': 'application/json',\n        },\n    };\n\n    fetch(`${baseURL}/users/current`, options)\n        .then(response => response.json())\n        .then(data => dispatch(authActions.getCurrentUserSuccess(data)))\n        .catch(error => dispatch(authActions.getCurrentUserError(error)));\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport authActions from './authActions';\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n    [authActions.registerSuccess]: (_, action) => action.payload.user,\n    [authActions.registerCleanError]: () => initialState,\n    [authActions.loginSuccess]: (_, action) => action.payload.user,\n    [authActions.getCurrentUserSuccess]: (_, action) => action.payload,\n    [authActions.logoutSuccess]: () => initialState,\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, action) => action.payload.token,\n    [authActions.loginSuccess]: (_, action) => action.payload.token,\n    [authActions.logoutSuccess]: () => null,\n});\n\nconst authLoading = createReducer(false, {\n    [authActions.registerRequest]: () => true,\n    [authActions.registerSuccess]: () => false,\n    [authActions.registerError]: () => false,\n    [authActions.loginRequest]: () => true,\n    [authActions.loginSuccess]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserRequest]: () => true,\n    [authActions.getCurrentUserSuccess]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n});\n\nconst authError = createReducer(null, {\n    [authActions.registerError]: () => true,\n    [authActions.registerCleanError]: () => null,\n    [authActions.registerSuccess]: () => null,\n    [authActions.loginError]: () => true,\n    [authActions.loginSuccess]: () => null,\n    [authActions.logoutError]: () => true,\n    [authActions.logoutSuccess]: () => null,\n    [authActions.getCurrentUserError]: () => true,\n    [authActions.getCurrentUserSuccess]: () => null,\n});\n\nexport default combineReducers({\n    user,\n    token,\n    authError,\n    authLoading,\n});\n","import phoneBookActions from './phoneBookActions';\nimport phoneBookSelectors from './phoneBookSelectors';\nimport { authSelectors } from '../auth';\n\nconst baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst getContacts = () => (dispatch, getState) => {\n    dispatch(phoneBookActions.fetchContactsRequest(getState()));\n\n    const token = authSelectors.getToken(getState());\n\n    const options = {\n        method: 'GET',\n        headers: {\n            authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n        },\n    };\n\n    fetch(`${baseURL}/contacts`, options)\n        .then(response => response.json())\n        .then(data => dispatch(phoneBookActions.fetchContactsSuccess(data)))\n        .catch(error => dispatch(phoneBookActions.fetchContactsError(error)));\n};\n\nconst setContact = (name, number) => (dispatch, getState) => {\n    dispatch(phoneBookActions.createContactRequest());\n\n    const contacts = phoneBookSelectors.getContacts(getState());\n\n    const isContactExist = contacts.find(contact => contact.name === name);\n\n    if (isContactExist) {\n        dispatch(phoneBookActions.togglerFlag());\n        dispatch(phoneBookActions.createContactFailed());\n        return;\n    }\n\n    const token = authSelectors.getToken(getState());\n\n    const options = {\n        method: 'POST',\n        headers: {\n            authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, number }),\n    };\n\n    fetch(`${baseURL}/contacts`, options)\n        .then(response => response.json())\n        .then(data => dispatch(phoneBookActions.createContactSuccess(data)))\n        .catch(error => dispatch(phoneBookActions.createContactError(error)));\n};\n\nconst deleteContact = id => (dispatch, getState) => {\n    dispatch(phoneBookActions.removeContactRequest());\n\n    const token = authSelectors.getToken(getState());\n\n    const options = {\n        method: 'DELETE',\n        headers: {\n            authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n        },\n    };\n\n    fetch(`${baseURL}/contacts/${id}`, options)\n        .then(response => response.json())\n        .then(() => dispatch(phoneBookActions.removeContactSuccess(id)))\n        .catch(error => dispatch(phoneBookActions.removeContactError(error)));\n};\n\nexport default { getContacts, setContact, deleteContact };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport phoneBookActions from './phoneBookActions';\nimport { authActions } from '../auth';\n\nconst items = createReducer([], {\n    [phoneBookActions.fetchContactsSuccess]: (_, action) => action.payload,\n    [phoneBookActions.createContactSuccess]: (state, action) => [\n        ...state,\n        action.payload,\n    ],\n    [phoneBookActions.removeContactSuccess]: (state, action) =>\n        state.filter(contact => contact.id !== action.payload),\n    [authActions.logoutSuccess]: () => [],\n});\n\nconst isNameAlreadyExist = createReducer(false, {\n    [phoneBookActions.togglerFlag]: state => !state,\n});\n\nconst filter = createReducer('', {\n    [phoneBookActions.filter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n    [phoneBookActions.fetchContactsRequest]: () => true,\n    [phoneBookActions.fetchContactsSuccess]: () => false,\n    [phoneBookActions.fetchContactsError]: () => false,\n    [phoneBookActions.createContactRequest]: () => true,\n    [phoneBookActions.createContactSuccess]: () => false,\n    [phoneBookActions.createContactFailed]: () => false,\n    [phoneBookActions.createContactError]: () => false,\n    [phoneBookActions.removeContactRequest]: () => true,\n    [phoneBookActions.removeContactSuccess]: () => false,\n    [phoneBookActions.removeContactError]: () => false,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n    isNameAlreadyExist,\n    loading,\n});\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n    box-shadow: 1px 1px 3px grey;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst Title = styled.p`\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n        Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n\nconst Input = styled.input`\n    margin-bottom: 10px;\n    padding: 5px;\n    width: 100%;\n    border: 1px solid grey;\n    border-radius: 3px;\n    &:active,\n    :focus {\n        outline: none;\n        border-color: #3645ac;\n    }\n`;\n\nconst Button = styled.button`\n    outline: none;\n    padding: 5px;\n    border: 1px solid transparent;\n    color: #fff;\n    background-color: #3645ac;\n    border-radius: 3px;\n    box-shadow: 1px 1px 3px #3645ac;\n    width: 100%;\n    &:hover {\n        cursor: pointer;\n        background-color: #243398;\n    }\n    &:disabled {\n        background-color: grey;\n    }\n`;\n\nexport { Form, Title, Input, Button };\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Title, Input, Button } from './styles';\nimport { phoneBookOperations } from '../../redux/phoneBook';\n\nexport default function ContactForm() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const avalibleContact = name !== '' && number !== '';\n    const handlerSubmit = e => {\n        e.preventDefault();\n        dispatch(phoneBookOperations.setContact(name, number));\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Form onSubmit={handlerSubmit}>\n            <Title>Name</Title>\n            <Input\n                type=\"text\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n            />\n            <Title>Number</Title>\n            <Input\n                type=\"text\"\n                value={number}\n                onChange={e => setNumber(e.target.value)}\n            />\n            <br />\n            <Button type=\"submit\" disabled={!avalibleContact}>\n                Add contact\n            </Button>\n        </Form>\n    );\n}\n","import { Input } from '../ContactForm/styles';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    box-shadow: 1px 1px 3px grey;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst FilterInput = styled(Input)`\n    margin-bottom: 0;\n`;\n\nexport { Container, FilterInput };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { phoneBookActions, phoneBookSelectors } from '../../redux/phoneBook';\nimport { Title } from '../ContactForm/styles';\nimport { Container, FilterInput } from './styles';\n\nexport default function Filter() {\n    const items = useSelector(phoneBookSelectors.getContacts);\n\n    const filterValue = useSelector(phoneBookSelectors.getFilter);\n\n    const dispatch = useDispatch();\n\n    const handlerFilter = e =>\n        dispatch(phoneBookActions.filter(e.target.value));\n\n    return (\n        items.length > 1 && (\n            <Container>\n                <Title>Find contacts by name</Title>\n                <FilterInput\n                    type=\"text\"\n                    value={filterValue}\n                    name=\"filter\"\n                    onChange={handlerFilter}\n                />\n            </Container>\n        )\n    );\n}\n","import styled from 'styled-components';\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 10px 0;\n    padding: 10px;\n    box-shadow: 1px 1px 3px grey;\n`;\n\nconst Button = styled.button`\n    position: relative;\n    margin-left: 10px;\n    color: #fff;\n    font-size: 25px;\n    width: 25px;\n    height: 25px;\n    outline: none;\n    padding: 0 5px;\n    border: none;\n    border-radius: 5px;\n    background-color: #f1392d;\n    &:hover {\n        cursor: pointer;\n        background-color: #b2261b;\n    }\n    &::before {\n        content: '+';\n        position: absolute;\n        top: 50%;\n        left: -3px;\n        transform: rotate(45deg) translate(-50%, -50%);\n    }\n`;\n\nconst Span = styled.span`\n    display: flex;\n    align-items: center;\n`;\n\nexport { Li, Button, Span };\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { phoneBookOperations } from '../../redux/phoneBook';\nimport { Li, Button, Span } from './styles';\n\nexport default function ContactListItem({ item: { id, name, number } }) {\n    const dispatch = useDispatch();\n\n    const removeContact = () => dispatch(phoneBookOperations.deleteContact(id));\n    return (\n        <Li>\n            <span>{name}</span>\n            <Span>\n                {number}\n                <Button type=\"button\" onClick={removeContact} />\n            </Span>\n        </Li>\n    );\n}\n\nContactListItem.propTypes = {\n    item: PropTypes.exact({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n    }),\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { phoneBookSelectors, phoneBookOperations } from '../../redux/phoneBook';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nexport default function ContactList() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(phoneBookOperations.getContacts());\n    }, [dispatch]);\n\n    const items = useSelector(phoneBookSelectors.getFiltredContacts);\n    return (\n        <TransitionGroup component=\"ul\" in={items.length}>\n            {items.map(item => (\n                <CSSTransition\n                    key={item.id}\n                    classNames=\"ContactList-fade\"\n                    timeout={250}\n                >\n                    <ContactListItem item={item} />\n                </CSSTransition>\n            ))}\n        </TransitionGroup>\n    );\n}\n","import styled from 'styled-components';\n\nconst Title = styled.h2`\n    margin: 15px 0;\n    color: #3446ac;\n`;\n\nconst InfoMessage = styled.div`\n    position: absolute;\n    top: 12px;\n    right: -30px;\n    padding: 10px 50px;\n    font-size: 12px;\n    border-radius: 5px;\n    color: #fff;\n    background-color: #f1392d;\n`;\n\nexport { Title, InfoMessage };\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport styles from './styles.module.css';\n\nexport default function UserMenu() {\n    const dispatch = useDispatch();\n\n    const name = useSelector(authSelectors.getUserName);\n\n    const onLogout = () => dispatch(authOperations.logOut());\n\n    return (\n        <div>\n            <span className={styles.span}>{name}</span>\n            <button className={styles.button} type=\"button\" onClick={onLogout}>\n                Logout\n            </button>\n        </div>\n    );\n}\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport UserMenu from '../UserMenu/UserMenu';\nimport { Title } from '../styles';\nimport styles from './styles.module.css';\n\nexport default function Navigation() {\n    return (\n        <div className={styles.container}>\n            <CSSTransition in appear classNames=\"Title-fade\" timeout={500}>\n                <Title>Phonebook</Title>\n            </CSSTransition>\n            <CSSTransition in appear classNames=\"UserMenu-fade\" timeout={500}>\n                <UserMenu />\n            </CSSTransition>\n        </div>\n    );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport { mail, passw, user } from '../../images';\n\nconst Span = styled.span`\n    color: red;\n    position: absolute;\n    bottom: -75%;\n    left: 0;\n`;\n\nconst MyButton = styled(Button)`\n    display: block;\n    margin: 15px auto 0;\n    width: fit-content;\n`;\n\nconst MyLink = styled(Link)`\n    display: block;\n    margin: 15px auto 0;\n    width: fit-content;\n`;\n\nconst FormGroup = styled(Form.Group)`\n    margin-bottom: 30px;\n    position: relative;\n    display: flex;\n`;\n\nconst EmailLabel = styled(Form.Label)`\n    position: absolute;\n    top: 50%;\n    left: -50px;\n    transform: translateY(-50%);\n    width: 40px;\n    height: 40px;\n    background: url(${mail}) center/contain no-repeat;\n`;\n\nconst EmailInput = styled(Form.Control)`\n    &:focus {\n        border-color: ${props => (props.isValid ? '#80bdff' : 'red')};\n    }\n`;\n\nconst PasswordLabel = styled(EmailLabel)`\n    background: url(${passw}) center/80% no-repeat;\n`;\n\nconst PasswordInput = styled(EmailInput)``;\n\nconst UserLabel = styled(PasswordLabel)`\n    background-image: url(${user});\n`;\n\nexport default {\n    Span,\n    MyButton,\n    MyLink,\n    EmailLabel,\n    EmailInput,\n    PasswordLabel,\n    PasswordInput,\n    UserLabel,\n    FormGroup,\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport { Form } from 'react-bootstrap';\nimport Loader from 'react-loader-spinner';\nimport Styles from '../SingUpForm/styles';\n\nexport default function SingInForm() {\n    const dispatch = useDispatch();\n\n    const isLoading = useSelector(authSelectors.getIsLoading);\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.logIn({ email, password }));\n    };\n\n    const emailValid = email !== '' && email.includes('@');\n\n    const passwordValid = password !== '' && password.length > 7;\n\n    const btnActive = emailValid && passwordValid;\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Styles.FormGroup controlId=\"formBasicEmail\">\n                <Styles.EmailLabel />\n                <Styles.EmailInput\n                    isValid={emailValid}\n                    type=\"email\"\n                    placeholder=\"email@example.com\"\n                    onChange={e => setEmail(e.target.value)}\n                    value={email}\n                />\n                {!emailValid && email !== '' && (\n                    <Styles.Span>Incorrect email!</Styles.Span>\n                )}\n            </Styles.FormGroup>\n\n            <Styles.FormGroup controlId=\"formBasicPassword\">\n                <Styles.PasswordLabel />\n                <Styles.PasswordInput\n                    isValid={passwordValid}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={e => setPassword(e.target.value)}\n                    value={password}\n                />\n                {!passwordValid && password !== '' && (\n                    <Styles.Span>\n                        the password must be at least 8 characters long!\n                    </Styles.Span>\n                )}\n            </Styles.FormGroup>\n\n            <Styles.MyButton\n                variant=\"outline-primary\"\n                type=\"submit\"\n                disabled={!btnActive}\n            >\n                {!isLoading ? (\n                    'SingIn'\n                ) : (\n                    <Loader color=\"#007bff\" height={22} width={45} />\n                )}\n            </Styles.MyButton>\n            <Styles.MyLink to=\"/register\">SingUp</Styles.MyLink>\n        </Form>\n    );\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport { Form } from 'react-bootstrap';\nimport Loader from 'react-loader-spinner';\nimport Styles from './styles';\n\nexport default function SingUpForm() {\n    const dispatch = useDispatch();\n\n    const isLoading = useSelector(authSelectors.getIsLoading);\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const nameValid = name !== '';\n\n    const emailValid = email !== '' && email.includes('@');\n\n    const passwordValid = password !== '' && password.length > 7;\n\n    const confirmPasswordValid = password === confirmPassword;\n\n    const btnActive =\n        nameValid && emailValid && passwordValid && confirmPasswordValid;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        dispatch(authOperations.register({ name, email, password }));\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Styles.FormGroup controlId=\"formBasicEmail\">\n                <Styles.EmailLabel />\n                <Styles.EmailInput\n                    isValid={emailValid}\n                    type=\"email\"\n                    placeholder=\"email@example.com\"\n                    onChange={e => setEmail(e.target.value)}\n                    value={email}\n                />\n                {!emailValid && email !== '' && (\n                    <Styles.Span>Incorrect email!</Styles.Span>\n                )}\n            </Styles.FormGroup>\n            <Styles.FormGroup controlId=\"formBasicPassword\">\n                <Styles.PasswordLabel />\n                <Styles.PasswordInput\n                    isValid={passwordValid}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={e => setPassword(e.target.value)}\n                    value={password}\n                />\n                {!passwordValid && password !== '' && (\n                    <Styles.Span>\n                        the password must be at least 8 characters long!\n                    </Styles.Span>\n                )}\n            </Styles.FormGroup>\n            <Styles.FormGroup controlId=\"formBasicConfirmPassword\">\n                <Styles.PasswordLabel />\n                <Styles.PasswordInput\n                    isValid={confirmPasswordValid}\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    value={confirmPassword}\n                />\n                {!confirmPasswordValid && (\n                    <Styles.Span>Passwords do not match!</Styles.Span>\n                )}\n            </Styles.FormGroup>\n            <Styles.FormGroup controlId=\"formBasicName\">\n                <Styles.UserLabel />\n                <Styles.EmailInput\n                    isValid={nameValid}\n                    type=\"text\"\n                    placeholder=\"User name\"\n                    onChange={e => setName(e.target.value)}\n                    value={name}\n                />\n            </Styles.FormGroup>\n            <Styles.MyButton\n                variant=\"outline-primary\"\n                type=\"submit\"\n                disabled={!btnActive}\n            >\n                {!isLoading ? (\n                    'SingUp'\n                ) : (\n                    <Loader color=\"#007bff\" height={22} width={50} />\n                )}\n            </Styles.MyButton>\n            <Styles.MyLink to=\"/login\">SingIn</Styles.MyLink>\n        </Form>\n    );\n}\n","import HomeView from './views/HomeView';\nimport LoginView from './views/LoginView';\nimport RegisterView from './views/RegisterView';\n\nexport default [\n    {\n        path: '/',\n        exact: true,\n        label: 'Home',\n        private: true,\n        restricted: false,\n        component: HomeView,\n    },\n    {\n        path: '/login',\n        restricted: true,\n        exact: true,\n        label: 'Login',\n        private: false,\n        component: LoginView,\n    },\n    {\n        path: '/register',\n        exact: true,\n        restricted: true,\n        label: 'Register',\n        private: false,\n        component: RegisterView,\n    },\n];\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport { phoneBookSelectors, phoneBookActions } from '../redux/phoneBook';\nimport { authSelectors, authOperations } from '../redux/auth';\nimport Layout from '../components/Layout';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport { InfoMessage } from '../components/styles';\nimport Navigation from '../components/Navigation/Navigation';\n\nexport default function HomeView() {\n    const dispatch = useDispatch();\n    const isNameAlreadyExist = useSelector(\n        phoneBookSelectors.getIsNameAlreadyExist,\n    );\n\n    if (isNameAlreadyExist) {\n        setTimeout(() => {\n            dispatch(phoneBookActions.togglerFlag());\n        }, 2000);\n    }\n\n    const name = useSelector(authSelectors.getUserName);\n    const token = useSelector(authSelectors.getToken);\n    const isLoading = useSelector(authSelectors.getIsLoading);\n\n    useEffect(() => {\n        if (!name && token) {\n            dispatch(authOperations.getCurrentUser());\n        }\n    }, [name, token, dispatch]);\n    return (\n        !isLoading &&\n        name && (\n            <Layout>\n                <Navigation />\n                <ContactForm />\n                <Filter />\n                <ContactList />\n                <CSSTransition\n                    in={isNameAlreadyExist}\n                    classNames=\"InfoMessage-fade\"\n                    timeout={250}\n                    unmountOnExit\n                >\n                    <InfoMessage>Contact already exists!</InfoMessage>\n                </CSSTransition>\n            </Layout>\n        )\n    );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport { authSelectors, authActions } from '../redux/auth';\nimport { InfoMessage } from '../components/styles';\nimport SingInForm from '../components/SingInForm/SingInForm';\nimport Layout from '../components/Layout';\n\nconst LoginView = () => {\n    const dispatch = useDispatch();\n\n    const isUserLoginError = useSelector(authSelectors.getError);\n\n    if (isUserLoginError) {\n        setTimeout(() => {\n            dispatch(authActions.registerCleanError());\n        }, 2000);\n    }\n    return (\n        <Layout>\n            <SingInForm />\n            <CSSTransition\n                in={isUserLoginError}\n                classNames=\"InfoMessage-fade\"\n                timeout={250}\n                unmountOnExit\n            >\n                <InfoMessage>Invalid email or password!</InfoMessage>\n            </CSSTransition>\n        </Layout>\n    );\n};\n\nexport default LoginView;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport { authSelectors, authActions } from '../redux/auth';\nimport SingUpForm from '../components/SingUpForm/SingUpForm';\nimport Layout from '../components/Layout';\nimport { InfoMessage } from '../components/styles';\n\nexport default function RegisterView() {\n    const dispatch = useDispatch();\n\n    const isEmailAlreadyExist = useSelector(authSelectors.getError);\n\n    if (isEmailAlreadyExist) {\n        setTimeout(() => {\n            dispatch(authActions.registerCleanError());\n        }, 2000);\n    }\n    return (\n        <Layout>\n            <SingUpForm />\n            <CSSTransition\n                in={isEmailAlreadyExist}\n                classNames=\"InfoMessage-fade\"\n                timeout={250}\n                unmountOnExit\n            >\n                <InfoMessage>This email already used!</InfoMessage>\n            </CSSTransition>\n        </Layout>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../../redux/auth';\n\nexport default function PablicRoute({ component: Component, ...rest }) {\n    const isAuthenticated = useSelector(authSelectors.getToken);\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isAuthenticated && rest.restricted ? (\n                    <Redirect to=\"/\" />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../../redux/auth';\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n    const isAuthenticated = useSelector(authSelectors.getToken);\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )\n            }\n        />\n    );\n}\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Layout from './Layout/Layout';\nimport routes from '../routes';\nimport PablicRotes from './common/Rotes/PablicRotes';\nimport PrivateRoute from './common/Rotes/PrivateRoute';\n\nexport default function App() {\n    return (\n        <Layout>\n            <Switch>\n                {routes.map(route =>\n                    route.private ? (\n                        <PrivateRoute key={route.label} {...route} />\n                    ) : (\n                        <PablicRotes key={route.label} {...route} />\n                    ),\n                )}\n            </Switch>\n        </Layout>\n    );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\nimport { phoneBookReducer } from './phoneBook';\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nexport const store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: phoneBookReducer,\n    },\n    middleware: getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\nimport './base.css';\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}